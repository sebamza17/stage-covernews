service: serverless-user

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:env, 'test'}
  region: us-east-1
  environment:
    ENV: ${opt:env}

functions:
  refreshToken:
      handler: user.refreshToken
      stageVariables: 
        - stage : ${opt:env, 'test'}
      events:
        - http:
            path: user/refreshToken
            method: post
            cors:
              origin: '*'
              headers:
                - Content-Type
                - Access-Control-Allow-Headers
                - Access-Control-Allow-Origin
                - Token
              allowCredentials: false
            authorizer: false
  getByToken:
      handler: user.getByToken
      stageVariables: 
        - stage : ${opt:env, 'test'}
      events:
        - http:
            path: user/getByToken
            method: post
            cors:
              origin: '*'
              headers:
                - Content-Type
                - Access-Control-Allow-Headers
                - Access-Control-Allow-Origin
                - Token
              allowCredentials: false
            authorizer: false
  getUsernameFromCognito:
      handler: user.getUsernameFromCognito
      stageVariables: 
        - stage : ${opt:env, 'test'}
      events:
        - http:
            path: user/getUsername
            method: get
            cors:
              origin: '*'
              headers:
                - Content-Type
                - Access-Control-Allow-Headers
                - Access-Control-Allow-Origin
                - Token
            authorizer:
              name: authorizer
              arn: arn:aws:cognito-idp:us-east-1:548886366175:userpool/us-east-1_uxb3I6LmE
  cognitoAuthorizer:
      handler: user.cognitoAuthorizer
      stageVariables:
        - stage : ${opt:env, 'test'}
      events:
        - http:
            path: user/authorize
            method: post
            cors:
              origin: '*'
              headers:
                - Content-Type
                - Access-Control-Allow-Headers
                - Access-Control-Allow-Origin
                - Token